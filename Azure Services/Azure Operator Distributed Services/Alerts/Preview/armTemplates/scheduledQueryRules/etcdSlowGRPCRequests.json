{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "alertName": {
      "value": "etcd slow grpc requests"
    },
    "alertDescription": {
      "value": ""
    },
    "alertSeverity": {
      "value": 3
    },
    "query": {
      "value": "let basename = 'grpc_server_handling_seconds'; InsightsMetrics | invoke pquery_histogram_buckets(basename) | extend grpcService = tostring(Labels.grpc_service) | where grpcService has_any ('etcdserverpb', 'grpc.health.v1') | extend grpcCode = tostring(Labels.grpc_code) | extend grpcMethod = tostring(Labels.grpc_method) | extend grpcType = tostring(Labels.grpc_type) | extend hostname = tostring(Labels.hostName) | where grpcType == 'unary' | join kind=inner (InsightsMetrics | invoke pquery_histogram_counts(basename) | extend grpcService = tostring(Labels.grpc_service) | extend grpcCode = tostring(Labels.grpc_code) | extend grpcMethod = tostring(Labels.grpc_method) | extend grpcType = tostring(Labels.grpc_type) | extend hostname = tostring(Labels.hostName)) on AgentId, Computer, Origin, SourceSystem, Type, _ResourceId, TimeGenerated, hostname, grpcService, grpcCode, grpcMethod, grpcType | summarize buckettotal=sum(bucketdiff), total=sum(totaldiff) by AgentId, Computer, Origin, SourceSystem, Type, _ResourceId, hostname, grpcService, grpcCode, grpcMethod, grpcType, le | sort by AgentId, Computer, Origin, SourceSystem, Type, _ResourceId, hostname, grpcService, grpcCode, grpcMethod, grpcType, le asc | invoke pquery_histogram_quantile(0.99)"
    },
    "resourceIdColumn": {
      "value": "_ResourceId"
    },
    "operator": {
      "value": "GreaterThan"
    },
    "threshold": {
      "value": "0.15"
    },
    "timeAggregation": {
      "value": "Maximum"
    },
    "metricMeasureColumn": {
      "value": "quantile"
    },
    "windowSize": {
      "value": "PT5M"
    },
    "evaluationFrequency": {
      "value": "PT5M"
    }
  }
}
